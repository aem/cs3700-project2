#!/usr/bin/python3 -u

from select import select
from socket import socket, AF_UNIX, SOCK_SEQPACKET

SELECT_TIMEOUT = 0.1


def pad(name):
    """
    Pads the name with null bytes
    """
    return '\0{}{}'.format(name, '\0' * (107 - len(name)))


class Packet(object):
    def __init__(self, source, dest, p_type, message):
        self.source = source
        self.dest = dest
        self.p_type = p_type
        self.message = message


class Bridge(object):
    def __init__(self, bridge_id):
        self.bridge_id = bridge_id


class Port(socket):
    def __init__(self, num: int, lan: str):
        super().__init__(AF_UNIX, SOCK_SEQPACKET)

        self.num = num
        self.lan = lan
        self.connect(pad(lan))


class RunningBridge(Bridge):
    def __init__(self, bridge_id, lans):
        print('Bridge {} starting up'.format(bridge_id))

        super().__init__(bridge_id)
        self.ports = [Port(i, name) for i, name in enumerate(lans)]

    def get_available_packets(self):
        ready, _, _ = select(self.ports, [], [], SELECT_TIMEOUT)
        return ready
